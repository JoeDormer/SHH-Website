{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Downloads\\\\shh_website_codebase\\\\frontend\\\\src\\\\components\\\\BookingForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction formatDate(date) {\n  return date.toISOString().split('T')[0];\n}\nexport default function BookingForm() {\n  _s();\n  const [output, setOutput] = useState('');\n  const handleClick = async () => {\n    setOutput('Loading...');\n    try {\n      const res = await fetch(\"\".concat(process.env.REACT_APP_API_BASE_URL, \"/api/available-slots\"), {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          clientId: 'MyHomeSmart_tgb56du',\n          clientRef: 'EXAMPLE12345',\n          visitType: 'Service',\n          postcode: 'EH45 9DB',\n          earliestDate: formatDate(new Date()),\n          latestDate: formatDate(new Date(Date.now() + 10 * 86400000))\n        })\n      });\n      const data = await res.json();\n      setOutput(JSON.stringify(data.slots, null, 2));\n    } catch (e) {\n      setOutput('Error: ' + e.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Booking Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Get Available Dates\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      style: {\n        whiteSpace: 'pre-wrap',\n        marginTop: '1rem'\n      },\n      children: output\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(BookingForm, \"ed78R9iIyxY5SZdctEQGoAk7t10=\");\n_c = BookingForm;\nvar _c;\n$RefreshReg$(_c, \"BookingForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","formatDate","date","toISOString","split","BookingForm","_s","output","setOutput","handleClick","res","fetch","concat","process","env","REACT_APP_API_BASE_URL","method","headers","body","JSON","stringify","clientId","clientRef","visitType","postcode","earliestDate","Date","latestDate","now","data","json","slots","e","message","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","whiteSpace","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/User/Downloads/shh_website_codebase/frontend/src/components/BookingForm.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction formatDate(date) {\n  return date.toISOString().split('T')[0];\n}\n\nexport default function BookingForm() {\n  const [output, setOutput] = useState('');\n\n  const handleClick = async () => {\n    setOutput('Loading...');\n    try {\n      const res = await fetch(\n        `${process.env.REACT_APP_API_BASE_URL}/api/available-slots`,\n        {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({\n            clientId: 'MyHomeSmart_tgb56du',\n            clientRef: 'EXAMPLE12345',\n            visitType: 'Service',\n            postcode: 'EH45 9DB',\n            earliestDate: formatDate(new Date()),\n            latestDate: formatDate(new Date(Date.now() + 10*86400000))\n          })\n        }\n      );\n      const data = await res.json();\n      setOutput(JSON.stringify(data.slots, null, 2));\n    } catch (e) {\n      setOutput('Error: ' + e.message);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Booking Form</h2>\n      <button onClick={handleClick}>Get Available Dates</button>\n      <pre style={{ whiteSpace: 'pre-wrap', marginTop: '1rem' }}>{output}</pre>\n    </div>\n  );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,UAAUA,CAACC,IAAI,EAAE;EACxB,OAAOA,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACzC;AAEA,eAAe,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACpC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMW,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9BD,SAAS,CAAC,YAAY,CAAC;IACvB,IAAI;MACF,MAAME,GAAG,GAAG,MAAMC,KAAK,IAAAC,MAAA,CAClBC,OAAO,CAACC,GAAG,CAACC,sBAAsB,2BACrC;QACEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,QAAQ,EAAE,qBAAqB;UAC/BC,SAAS,EAAE,cAAc;UACzBC,SAAS,EAAE,SAAS;UACpBC,QAAQ,EAAE,UAAU;UACpBC,YAAY,EAAExB,UAAU,CAAC,IAAIyB,IAAI,CAAC,CAAC,CAAC;UACpCC,UAAU,EAAE1B,UAAU,CAAC,IAAIyB,IAAI,CAACA,IAAI,CAACE,GAAG,CAAC,CAAC,GAAG,EAAE,GAAC,QAAQ,CAAC;QAC3D,CAAC;MACH,CACF,CAAC;MACD,MAAMC,IAAI,GAAG,MAAMnB,GAAG,CAACoB,IAAI,CAAC,CAAC;MAC7BtB,SAAS,CAACW,IAAI,CAACC,SAAS,CAACS,IAAI,CAACE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;IAChD,CAAC,CAAC,OAAOC,CAAC,EAAE;MACVxB,SAAS,CAAC,SAAS,GAAGwB,CAAC,CAACC,OAAO,CAAC;IAClC;EACF,CAAC;EAED,oBACEjC,OAAA;IAAAkC,QAAA,gBACElC,OAAA;MAAAkC,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBtC,OAAA;MAAQuC,OAAO,EAAE9B,WAAY;MAAAyB,QAAA,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC1DtC,OAAA;MAAKwC,KAAK,EAAE;QAAEC,UAAU,EAAE,UAAU;QAAEC,SAAS,EAAE;MAAO,CAAE;MAAAR,QAAA,EAAE3B;IAAM;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtE,CAAC;AAEV;AAAChC,EAAA,CAnCuBD,WAAW;AAAAsC,EAAA,GAAXtC,WAAW;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
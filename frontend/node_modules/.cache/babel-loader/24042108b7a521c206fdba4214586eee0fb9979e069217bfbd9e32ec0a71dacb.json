{"ast":null,"code":"import _objectSpread from \"C:/Users/User/Downloads/shh_website_codebase/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Downloads\\\\shh_website_codebase\\\\frontend\\\\src\\\\components\\\\BookingFormLayout.js\",\n  _s = $RefreshSig$();\nimport React, { Suspense, lazy, useState, useEffect } from 'react';\nimport Header from './Header';\nimport Footer from './Footer';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BookingFormFields = /*#__PURE__*/lazy(_c = () => import('./BookingFormFields'));\n_c2 = BookingFormFields;\nexport default function BookingFormLayout() {\n  _s();\n  // grab any UTM defaults from the URL\n  const params = new URLSearchParams(window.location.search);\n\n  // date range: today → seven days out\n  const today = new Date();\n  const sevenDays = new Date(today);\n  sevenDays.setDate(today.getDate() + 7);\n\n  // form state, seeded from UTM if present\n  const [form, setForm] = useState({\n    firstName: params.get('utm_firstName') || '',\n    surname: params.get('utm_surname') || '',\n    phone: params.get('utm_phone') || '',\n    email: params.get('utm_email') || '',\n    address: params.get('utm_address') || '',\n    postcode: params.get('utm_postcode') || ''\n  });\n  const [slots, setSlots] = useState([]);\n  const [dates, setDates] = useState([]);\n  const [times, setTimes] = useState([]);\n  const [selectedDate, setSelectedDate] = useState('');\n  const [selectedTime, setSelectedTime] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // helper to format a Date to YYYY-MM-DD\n  function formatDate(date) {\n    return date.toISOString().split('T')[0];\n  }\n\n  // update form fields as the user types\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setForm(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      [name]: value\n    }));\n  };\n\n  // hit your /api/available-slots endpoint\n  const fetchSlots = async () => {\n    setLoading(true);\n    setError(null);\n    const clientId = process.env.REACT_APP_CLIENT_ID;\n    const clientRef = \"MHS-\".concat(Date.now());\n    if (!clientId) {\n      setError('Error: REACT_APP_CLIENT_ID is not set. Please add it to .env.local.');\n      setLoading(false);\n      return;\n    }\n    const payload = {\n      clientId,\n      clientRef,\n      visitType: 'Service',\n      postcode: form.postcode,\n      earliestDate: formatDate(today),\n      latestDate: formatDate(sevenDays)\n    };\n    try {\n      const res = await fetch(\"\".concat(process.env.REACT_APP_API_BASE_URL || 'http://localhost:3001', \"/api/available-slots\"), {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      if (!res.ok) throw new Error(\"API Error: HTTP \".concat(res.status));\n      const {\n        slots: fetched = []\n      } = await res.json();\n      setSlots(fetched);\n      // extract unique dates and reset downstream selections\n      setDates(Array.from(new Set(fetched.map(s => s.visitDate))));\n      setSelectedDate('');\n      setTimes([]);\n      setSelectedTime('');\n    } catch (e) {\n      setError(e.message);\n      setSlots([]);\n      setDates([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // whenever the selected date changes, rebuild the time slots\n  useEffect(() => {\n    if (!selectedDate) return;\n    const available = slots.filter(s => s.visitDate === selectedDate).map(s => \"\".concat(s.windowStart, \"\\u2013\").concat(s.windowEnd));\n    setTimes(available);\n    setSelectedTime('');\n  }, [selectedDate, slots]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"Booking Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchSlots,\n      disabled: loading,\n      children: loading ? 'Loading...' : 'Get Available Dates'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading form\\u2026\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 27\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(BookingFormFields, {\n        form: form,\n        onChange: handleChange,\n        dates: dates,\n        times: times,\n        selectedDate: selectedDate,\n        selectedTime: selectedTime,\n        onDateChange: e => setSelectedDate(e.target.value),\n        onTimeChange: e => setSelectedTime(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), selectedDate && selectedTime && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        margin: '1rem'\n      },\n      children: [\"You selected: \", selectedDate, \", \", selectedTime]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(BookingFormLayout, \"SwJ3/om84S8KObEi6mFB0DvYYHw=\");\n_c3 = BookingFormLayout;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"BookingFormFields$lazy\");\n$RefreshReg$(_c2, \"BookingFormFields\");\n$RefreshReg$(_c3, \"BookingFormLayout\");","map":{"version":3,"names":["React","Suspense","lazy","useState","useEffect","Header","Footer","jsxDEV","_jsxDEV","Fragment","_Fragment","BookingFormFields","_c","_c2","BookingFormLayout","_s","params","URLSearchParams","window","location","search","today","Date","sevenDays","setDate","getDate","form","setForm","firstName","get","surname","phone","email","address","postcode","slots","setSlots","dates","setDates","times","setTimes","selectedDate","setSelectedDate","selectedTime","setSelectedTime","loading","setLoading","error","setError","formatDate","date","toISOString","split","handleChange","e","name","value","target","prev","_objectSpread","fetchSlots","clientId","process","env","REACT_APP_CLIENT_ID","clientRef","concat","now","payload","visitType","earliestDate","latestDate","res","fetch","REACT_APP_API_BASE_URL","method","headers","body","JSON","stringify","ok","Error","status","fetched","json","Array","from","Set","map","s","visitDate","message","available","filter","windowStart","windowEnd","children","title","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","style","color","fallback","onChange","onDateChange","onTimeChange","margin","_c3","$RefreshReg$"],"sources":["C:/Users/User/Downloads/shh_website_codebase/frontend/src/components/BookingFormLayout.js"],"sourcesContent":["import React, { Suspense, lazy, useState, useEffect } from 'react';\r\nimport Header from './Header';\r\nimport Footer from './Footer';\r\n\r\nconst BookingFormFields = lazy(() => import('./BookingFormFields'));\r\n\r\nexport default function BookingFormLayout() {\r\n  // grab any UTM defaults from the URL\r\n  const params = new URLSearchParams(window.location.search);\r\n\r\n  // date range: today → seven days out\r\n  const today = new Date();\r\n  const sevenDays = new Date(today);\r\n  sevenDays.setDate(today.getDate() + 7);\r\n\r\n  // form state, seeded from UTM if present\r\n  const [form, setForm] = useState({\r\n    firstName: params.get('utm_firstName') || '',\r\n    surname:   params.get('utm_surname')   || '',\r\n    phone:     params.get('utm_phone')     || '',\r\n    email:     params.get('utm_email')     || '',\r\n    address:   params.get('utm_address')   || '',\r\n    postcode:  params.get('utm_postcode')  || ''\r\n  });\r\n\r\n  const [slots, setSlots]             = useState([]);\r\n  const [dates, setDates]             = useState([]);\r\n  const [times, setTimes]             = useState([]);\r\n  const [selectedDate, setSelectedDate] = useState('');\r\n  const [selectedTime, setSelectedTime] = useState('');\r\n  const [loading, setLoading]         = useState(false);\r\n  const [error, setError]             = useState(null);\r\n\r\n  // helper to format a Date to YYYY-MM-DD\r\n  function formatDate(date) {\r\n    return date.toISOString().split('T')[0];\r\n  }\r\n\r\n  // update form fields as the user types\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setForm(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  // hit your /api/available-slots endpoint\r\n  const fetchSlots = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    const clientId  = process.env.REACT_APP_CLIENT_ID;\r\n    const clientRef = `MHS-${Date.now()}`;\r\n\r\n    if (!clientId) {\r\n      setError('Error: REACT_APP_CLIENT_ID is not set. Please add it to .env.local.');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    const payload = {\r\n      clientId,\r\n      clientRef,\r\n      visitType:   'Service',\r\n      postcode:    form.postcode,\r\n      earliestDate: formatDate(today),\r\n      latestDate:   formatDate(sevenDays)\r\n    };\r\n\r\n    try {\r\n      const res = await fetch(\r\n        `${process.env.REACT_APP_API_BASE_URL || 'http://localhost:3001'}/api/available-slots`,\r\n        {\r\n          method:  'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body:    JSON.stringify(payload)\r\n        }\r\n      );\r\n      if (!res.ok) throw new Error(`API Error: HTTP ${res.status}`);\r\n      const { slots: fetched = [] } = await res.json();\r\n\r\n      setSlots(fetched);\r\n      // extract unique dates and reset downstream selections\r\n      setDates(Array.from(new Set(fetched.map(s => s.visitDate))));\r\n      setSelectedDate('');\r\n      setTimes([]);\r\n      setSelectedTime('');\r\n    } catch (e) {\r\n      setError(e.message);\r\n      setSlots([]);\r\n      setDates([]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // whenever the selected date changes, rebuild the time slots\r\n  useEffect(() => {\r\n    if (!selectedDate) return;\r\n    const available = slots\r\n      .filter(s => s.visitDate === selectedDate)\r\n      .map(s => `${s.windowStart}–${s.windowEnd}`);\r\n    setTimes(available);\r\n    setSelectedTime('');\r\n  }, [selectedDate, slots]);\r\n\r\n  return (\r\n    <>\r\n      <Header title=\"Booking Form\" />\r\n      <button onClick={fetchSlots} disabled={loading}>\r\n        {loading ? 'Loading...' : 'Get Available Dates'}\r\n      </button>\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n\r\n      {/* lazy-load the fields */}\r\n      <Suspense fallback={<p>Loading form…</p>}>\r\n        <BookingFormFields\r\n          form={form}\r\n          onChange={handleChange}\r\n          dates={dates}\r\n          times={times}\r\n          selectedDate={selectedDate}\r\n          selectedTime={selectedTime}\r\n          onDateChange={e => setSelectedDate(e.target.value)}\r\n          onTimeChange={e => setSelectedTime(e.target.value)}\r\n        />\r\n      </Suspense>\r\n\r\n      {selectedDate && selectedTime && (\r\n        <p style={{ margin: '1rem' }}>\r\n          You selected: {selectedDate}, {selectedTime}\r\n        </p>\r\n      )}\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
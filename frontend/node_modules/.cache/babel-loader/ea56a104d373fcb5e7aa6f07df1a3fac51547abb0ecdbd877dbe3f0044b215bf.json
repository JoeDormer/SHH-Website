{"ast":null,"code":"import _objectSpread from \"C:/Users/User/Downloads/shh_website_codebase/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Downloads\\\\shh_website_codebase\\\\frontend\\\\src\\\\components\\\\BookingFormLayout.js\",\n  _s = $RefreshSig$();\n// src/components/BookingFormLayout.js\nimport React, { Suspense, lazy, useState, useEffect } from 'react';\nimport Header from './Header';\nimport Footer from './Footer';\nimport styles from '../css/BookingFormLayout.module.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BookingFormFields = /*#__PURE__*/lazy(_c = () => import('./BookingFormFields'));\n_c2 = BookingFormFields;\nexport default function BookingFormLayout() {\n  _s();\n  // grab any UTM defaults from the URL\n  const params = new URLSearchParams(window.location.search);\n\n  // date range: today → seven days out\n  const today = new Date();\n  const sevenDays = new Date(today);\n  sevenDays.setDate(today.getDate() + 7);\n\n  // form state, seeded from UTM if present\n  const [form, setForm] = useState({\n    firstName: params.get('utm_firstName') || '',\n    surname: params.get('utm_surname') || '',\n    phone: params.get('utm_phone') || '',\n    email: params.get('utm_email') || '',\n    address: params.get('utm_address') || '',\n    postcode: params.get('utm_postcode') || ''\n  });\n  const [slots, setSlots] = useState([]);\n  const [dates, setDates] = useState([]);\n  const [times, setTimes] = useState([]);\n  const [selectedDate, setSelectedDate] = useState('');\n  const [selectedTime, setSelectedTime] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [errors, setErrors] = useState({});\n\n  // helper to format a Date to YYYY-MM-DD\n  function formatDate(date) {\n    return date.toISOString().split('T')[0];\n  }\n\n  // update form fields as the user types\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setForm(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      [name]: value\n    }));\n  };\n\n  // front-end validation\n  const validateForm = () => {\n    const {\n      firstName,\n      surname,\n      phone,\n      email,\n      address,\n      postcode\n    } = form;\n    const newErrors = {};\n    if (!firstName.trim()) newErrors.firstName = 'First Name is required';\n    if (!surname.trim()) newErrors.surname = 'Surname is required';\n    if (!address.trim()) newErrors.address = 'Address is required';\n    if (!email.trim()) newErrors.email = 'Email is required';else if (!/^\\S+@\\S+\\.\\S+$/.test(email)) newErrors.email = 'Enter a valid email address';\n    const digitsOnly = phone.replace(/\\D/g, '');\n    if (!digitsOnly) newErrors.phone = 'Phone is required';else if (digitsOnly.length < 7) newErrors.phone = 'Phone must be at least 7 digits';\n    if (!postcode.trim()) newErrors.postcode = 'Postcode is required';else if (postcode.trim().length < 6) newErrors.postcode = 'Postcode must be at least 6 characters';\n    return newErrors;\n  };\n\n  // hit your /api/available-slots endpoint\n  const fetchSlots = async () => {\n    setLoading(true);\n    setError(null);\n    const clientId = process.env.REACT_APP_CLIENT_ID;\n    const clientRef = \"MHS-\".concat(Date.now());\n    if (!clientId) {\n      setError('Error: REACT_APP_CLIENT_ID is not set. Please add it to .env.local.');\n      setLoading(false);\n      return;\n    }\n    const payload = {\n      clientId,\n      clientRef,\n      visitType: 'Service',\n      postcode: form.postcode,\n      earliestDate: formatDate(today),\n      latestDate: formatDate(sevenDays)\n    };\n    try {\n      const res = await fetch(\"\".concat(process.env.REACT_APP_API_BASE_URL || 'http://localhost:3001', \"/api/available-slots\"), {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      if (!res.ok) throw new Error(\"API Error: HTTP \".concat(res.status));\n      const {\n        slots: fetched = []\n      } = await res.json();\n      setSlots(fetched);\n      // extract unique dates and reset downstream selections\n      setDates(Array.from(new Set(fetched.map(s => s.visitDate))));\n      setSelectedDate('');\n      setTimes([]);\n      setSelectedTime('');\n    } catch (e) {\n      setError(e.message);\n      setSlots([]);\n      setDates([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // whenever the selected date changes, rebuild the time slots\n  useEffect(() => {\n    if (!selectedDate) return;\n    const available = slots.filter(s => s.visitDate === selectedDate).map(s => \"\".concat(s.windowStart, \"\\u2013\").concat(s.windowEnd));\n    setTimes(available);\n    setSelectedTime('');\n  }, [selectedDate, slots]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"SHH Booking\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formCard,\n      children: [/*#__PURE__*/_jsxDEV(Suspense, {\n        fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading form\\u2026\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 29\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(BookingFormFields, {\n          form: form,\n          onChange: handleChange,\n          errors: errors,\n          dates: dates,\n          times: times,\n          selectedDate: selectedDate,\n          selectedTime: selectedTime,\n          onDateChange: e => setSelectedDate(e.target.value),\n          onTimeChange: e => setSelectedTime(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red',\n          marginTop: '1rem'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.submitButton,\n        onClick: () => {\n          const errs = validateForm();\n          if (Object.keys(errs).length) {\n            setErrors(errs);\n          } else {\n            setErrors({});\n            fetchSlots();\n          }\n        },\n        disabled: loading,\n        children: loading ? 'Loading…' : 'Get Available Dates'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), selectedDate && selectedTime && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginTop: '1rem'\n        },\n        children: [\"You selected: \", selectedDate, \", \", selectedTime]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(BookingFormLayout, \"aTwktlpkgJSjlzxW+0/em4EYhJM=\");\n_c3 = BookingFormLayout;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"BookingFormFields$lazy\");\n$RefreshReg$(_c2, \"BookingFormFields\");\n$RefreshReg$(_c3, \"BookingFormLayout\");","map":{"version":3,"names":["React","Suspense","lazy","useState","useEffect","Header","Footer","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","BookingFormFields","_c","_c2","BookingFormLayout","_s","params","URLSearchParams","window","location","search","today","Date","sevenDays","setDate","getDate","form","setForm","firstName","get","surname","phone","email","address","postcode","slots","setSlots","dates","setDates","times","setTimes","selectedDate","setSelectedDate","selectedTime","setSelectedTime","loading","setLoading","error","setError","errors","setErrors","formatDate","date","toISOString","split","handleChange","e","name","value","target","prev","_objectSpread","validateForm","newErrors","trim","test","digitsOnly","replace","length","fetchSlots","clientId","process","env","REACT_APP_CLIENT_ID","clientRef","concat","now","payload","visitType","earliestDate","latestDate","res","fetch","REACT_APP_API_BASE_URL","method","headers","body","JSON","stringify","ok","Error","status","fetched","json","Array","from","Set","map","s","visitDate","message","available","filter","windowStart","windowEnd","children","title","fileName","_jsxFileName","lineNumber","columnNumber","className","formCard","fallback","onChange","onDateChange","onTimeChange","style","color","marginTop","submitButton","onClick","errs","Object","keys","disabled","_c3","$RefreshReg$"],"sources":["C:/Users/User/Downloads/shh_website_codebase/frontend/src/components/BookingFormLayout.js"],"sourcesContent":["// src/components/BookingFormLayout.js\r\nimport React, { Suspense, lazy, useState, useEffect } from 'react';\r\nimport Header from './Header';\r\nimport Footer from './Footer';\r\nimport styles from '../css/BookingFormLayout.module.css';\r\n\r\nconst BookingFormFields = lazy(() => import('./BookingFormFields'));\r\n\r\nexport default function BookingFormLayout() {\r\n  // grab any UTM defaults from the URL\r\n  const params = new URLSearchParams(window.location.search);\r\n\r\n  // date range: today → seven days out\r\n  const today = new Date();\r\n  const sevenDays = new Date(today);\r\n  sevenDays.setDate(today.getDate() + 7);\r\n\r\n  // form state, seeded from UTM if present\r\n  const [form, setForm] = useState({\r\n    firstName: params.get('utm_firstName') || '',\r\n    surname:   params.get('utm_surname')   || '',\r\n    phone:     params.get('utm_phone')     || '',\r\n    email:     params.get('utm_email')     || '',\r\n    address:   params.get('utm_address')   || '',\r\n    postcode:  params.get('utm_postcode')  || ''\r\n  });\r\n\r\n  const [slots, setSlots]                 = useState([]);\r\n  const [dates, setDates]                 = useState([]);\r\n  const [times, setTimes]                 = useState([]);\r\n  const [selectedDate, setSelectedDate]   = useState('');\r\n  const [selectedTime, setSelectedTime]   = useState('');\r\n  const [loading, setLoading]             = useState(false);\r\n  const [error, setError]                 = useState(null);\r\n  const [errors, setErrors]               = useState({});\r\n\r\n  // helper to format a Date to YYYY-MM-DD\r\n  function formatDate(date) {\r\n    return date.toISOString().split('T')[0];\r\n  }\r\n\r\n  // update form fields as the user types\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setForm(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  // front-end validation\r\n  const validateForm = () => {\r\n    const { firstName, surname, phone, email, address, postcode } = form;\r\n    const newErrors = {};\r\n\r\n    if (!firstName.trim()) newErrors.firstName = 'First Name is required';\r\n    if (!surname.trim())   newErrors.surname   = 'Surname is required';\r\n    if (!address.trim())   newErrors.address   = 'Address is required';\r\n\r\n    if (!email.trim()) newErrors.email = 'Email is required';\r\n    else if (!/^\\S+@\\S+\\.\\S+$/.test(email))\r\n      newErrors.email = 'Enter a valid email address';\r\n\r\n    const digitsOnly = phone.replace(/\\D/g, '');\r\n    if (!digitsOnly) newErrors.phone = 'Phone is required';\r\n    else if (digitsOnly.length < 7)\r\n      newErrors.phone = 'Phone must be at least 7 digits';\r\n\r\n    if (!postcode.trim()) newErrors.postcode = 'Postcode is required';\r\n    else if (postcode.trim().length < 6)\r\n      newErrors.postcode = 'Postcode must be at least 6 characters';\r\n\r\n    return newErrors;\r\n  };\r\n\r\n  // hit your /api/available-slots endpoint\r\n  const fetchSlots = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    const clientId  = process.env.REACT_APP_CLIENT_ID;\r\n    const clientRef = `MHS-${Date.now()}`;\r\n\r\n    if (!clientId) {\r\n      setError('Error: REACT_APP_CLIENT_ID is not set. Please add it to .env.local.');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    const payload = {\r\n      clientId,\r\n      clientRef,\r\n      visitType:    'Service',\r\n      postcode:     form.postcode,\r\n      earliestDate: formatDate(today),\r\n      latestDate:   formatDate(sevenDays)\r\n    };\r\n\r\n    try {\r\n      const res = await fetch(\r\n        `${process.env.REACT_APP_API_BASE_URL || 'http://localhost:3001'}/api/available-slots`,\r\n        {\r\n          method:  'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body:    JSON.stringify(payload)\r\n        }\r\n      );\r\n      if (!res.ok) throw new Error(`API Error: HTTP ${res.status}`);\r\n      const { slots: fetched = [] } = await res.json();\r\n\r\n      setSlots(fetched);\r\n      // extract unique dates and reset downstream selections\r\n      setDates(Array.from(new Set(fetched.map(s => s.visitDate))));\r\n      setSelectedDate('');\r\n      setTimes([]);\r\n      setSelectedTime('');\r\n    } catch (e) {\r\n      setError(e.message);\r\n      setSlots([]);\r\n      setDates([]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // whenever the selected date changes, rebuild the time slots\r\n  useEffect(() => {\r\n    if (!selectedDate) return;\r\n    const available = slots\r\n      .filter(s => s.visitDate === selectedDate)\r\n      .map(s => `${s.windowStart}–${s.windowEnd}`);\r\n    setTimes(available);\r\n    setSelectedTime('');\r\n  }, [selectedDate, slots]);\r\n\r\n  return (\r\n    <>\r\n      <Header title=\"SHH Booking\" />\r\n\r\n      <div className={styles.formCard}>\r\n        <Suspense fallback={<p>Loading form…</p>}>\r\n          <BookingFormFields\r\n            form={form}\r\n            onChange={handleChange}\r\n            errors={errors}\r\n            dates={dates}\r\n            times={times}\r\n            selectedDate={selectedDate}\r\n            selectedTime={selectedTime}\r\n            onDateChange={e => setSelectedDate(e.target.value)}\r\n            onTimeChange={e => setSelectedTime(e.target.value)}\r\n          />\r\n        </Suspense>\r\n\r\n        {error && (\r\n          <p style={{ color: 'red', marginTop: '1rem' }}>\r\n            {error}\r\n          </p>\r\n        )}\r\n\r\n        <button\r\n          className={styles.submitButton}\r\n          onClick={() => {\r\n            const errs = validateForm();\r\n            if (Object.keys(errs).length) {\r\n              setErrors(errs);\r\n            } else {\r\n              setErrors({});\r\n              fetchSlots();\r\n            }\r\n          }}\r\n          disabled={loading}\r\n        >\r\n          {loading ? 'Loading…' : 'Get Available Dates'}\r\n        </button>\r\n\r\n        {selectedDate && selectedTime && (\r\n          <p style={{ marginTop: '1rem' }}>\r\n            You selected: {selectedDate}, {selectedTime}\r\n          </p>\r\n        )}\r\n      </div>\r\n\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
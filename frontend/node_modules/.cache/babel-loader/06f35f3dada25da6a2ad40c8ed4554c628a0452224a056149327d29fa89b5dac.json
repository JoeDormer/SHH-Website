{"ast":null,"code":"import _objectSpread from \"C:/Users/User/Downloads/shh_website_codebase/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Downloads\\\\shh_website_codebase\\\\frontend\\\\src\\\\components\\\\BookingFormLayout.js\",\n  _s = $RefreshSig$();\n// src/components/BookingFormLayout.js\nimport React, { Suspense, lazy, useState, useEffect } from 'react';\nimport Header from './Header';\nimport Footer from './Footer';\nimport styles from '../css/BookingFormLayout.module.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BookingFormFields = /*#__PURE__*/lazy(_c = () => import('./BookingFormFields'));\n_c2 = BookingFormFields;\nexport default function BookingFormLayout() {\n  _s();\n  const params = new URLSearchParams(window.location.search);\n  const today = new Date();\n  const sevenDays = new Date(today);\n  sevenDays.setDate(today.getDate() + 7);\n\n  // form values\n  const [form, setForm] = useState({\n    firstName: params.get('utm_firstName') || '',\n    surname: params.get('utm_surname') || '',\n    phone: params.get('utm_phone') || '',\n    email: params.get('utm_email') || '',\n    address: params.get('utm_address') || '',\n    postcode: params.get('utm_postcode') || ''\n  });\n\n  // slot-fetching state\n  const [slots, setSlots] = useState([]);\n  const [dates, setDates] = useState([]);\n  const [times, setTimes] = useState([]);\n  const [selectedDate, setSelectedDate] = useState('');\n  const [selectedTime, setSelectedTime] = useState('');\n\n  // UI state\n  const [loading, setLoading] = useState(false);\n  const [bookingLoading, setBookingLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [bookingError, setBookingError] = useState(null);\n  const [errors, setErrors] = useState({});\n  const [showSlots, setShowSlots] = useState(false);\n  const [noSlots, setNoSlots] = useState(false);\n  function formatDate(date) {\n    return date.toISOString().split('T')[0];\n  }\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setForm(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      [name]: value\n    }));\n  };\n  const validateForm = () => {\n    const {\n      firstName,\n      surname,\n      phone,\n      email,\n      address,\n      postcode\n    } = form;\n    const newErrors = {};\n    if (!firstName.trim()) newErrors.firstName = 'First Name is required';\n    if (!surname.trim()) newErrors.surname = 'Surname is required';\n    if (!address.trim()) newErrors.address = 'Address is required';\n    if (!email.trim()) newErrors.email = 'Email is required';else if (!/^\\S+@\\S+\\.\\S+$/.test(email)) newErrors.email = 'Enter a valid email address';\n    const digits = phone.replace(/\\D/g, '');\n    if (!digits) newErrors.phone = 'Phone is required';else if (digits.length < 7) newErrors.phone = 'Phone must be at least 7 digits';\n    if (!postcode.trim()) newErrors.postcode = 'Postcode is required';else if (postcode.trim().length < 6) newErrors.postcode = 'Postcode must be at least 6 characters';\n    return newErrors;\n  };\n  const fetchSlots = async () => {\n    setLoading(true);\n    setError(null);\n    setNoSlots(false);\n    const clientId = process.env.REACT_APP_CLIENT_ID;\n    const clientRef = \"MHS-\".concat(Date.now());\n    if (!clientId) {\n      setError('Error: REACT_APP_CLIENT_ID not set.');\n      setLoading(false);\n      return;\n    }\n    try {\n      const res = await fetch(\"\".concat(process.env.REACT_APP_API_BASE_URL || 'http://localhost:3001', \"/api/available-slots\"), {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          clientId,\n          clientRef,\n          visitType: 'Service',\n          postcode: form.postcode,\n          earliestDate: formatDate(today),\n          latestDate: formatDate(sevenDays)\n        })\n      });\n      if (!res.ok) throw new Error(\"HTTP \".concat(res.status));\n      const {\n        slots: fetched = []\n      } = await res.json();\n      setSlots(fetched);\n      const uniqDates = Array.from(new Set(fetched.map(s => s.visitDate)));\n      setDates(uniqDates);\n      setSelectedDate('');\n      setTimes([]);\n      setSelectedTime('');\n      if (uniqDates.length === 0) setNoSlots(true);\n      setShowSlots(true);\n    } catch (e) {\n      setError(e.message);\n      setShowSlots(false);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    if (!selectedDate) return;\n    const available = slots.filter(s => s.visitDate === selectedDate).map(s => \"\".concat(s.windowStart, \"\\u2013\").concat(s.windowEnd));\n    setTimes(available);\n    setSelectedTime('');\n  }, [selectedDate, slots]);\n  const handleGetDates = () => {\n    const errs = validateForm();\n    if (Object.keys(errs).length) {\n      setErrors(errs);\n    } else {\n      setErrors({});\n      fetchSlots();\n    }\n  };\n  const handleBook = async () => {\n    setBookingLoading(true);\n    setBookingError(null);\n    const clientId = process.env.REACT_APP_CLIENT_ID;\n    const clientRef = \"MHS-\".concat(Date.now());\n    const [windowStart, windowEnd] = selectedTime.split('–');\n    try {\n      const res = await fetch(\"\".concat(process.env.REACT_APP_API_BASE_URL || 'http://localhost:3001', \"/api/book-slot\"), {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          clientId,\n          clientReference: clientRef,\n          visitType: 'Service',\n          postcode: form.postcode,\n          visitDate: selectedDate,\n          visitWindowStart: windowStart,\n          visitWindowEnd: windowEnd,\n          bookingTimeoutPeriod: 500\n        })\n      });\n\n      // parse the JSON **even on error** so we can inspect it\n      const payload = await res.json();\n      if (!res.ok) {\n        console.error('Booking error payload:', payload);\n        // show the server-sent message or the raw payload\n        throw new Error(payload.message || payload.error || JSON.stringify(payload));\n      }\n\n      // On success, redirect to payment\n      window.location.href = \"/payment?reference=\".concat(payload.reference);\n    } catch (e) {\n      setBookingError(e.message);\n    } finally {\n      setBookingLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"SHH Booking\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.loadingOverlay,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.loadingPopup,\n        children: \"Loading available dates\\u2026\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }, this), !showSlots && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formCard,\n      children: [/*#__PURE__*/_jsxDEV(Suspense, {\n        fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading form\\u2026\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 31\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(BookingFormFields, {\n          form: form,\n          onChange: handleChange,\n          errors: errors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.errorText,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.submitButton,\n        onClick: handleGetDates,\n        disabled: loading,\n        children: loading ? 'Loading…' : 'Get Available Dates'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }, this), showSlots && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.resultsCard,\n      children: [noSlots ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.noSlotsText,\n        children: \"No available slots found. Please check your postcode and try again, or contact us on XXXXXXXXX.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Select Date & Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.fieldGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"date\",\n            className: styles.label,\n            children: \"Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"date\",\n            className: styles.input,\n            value: selectedDate,\n            onChange: e => setSelectedDate(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"--Select Date--\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 19\n            }, this), dates.map(d => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: d,\n              children: d\n            }, d, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 35\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 15\n        }, this), times.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.fieldGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"time\",\n            className: styles.label,\n            children: \"Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"time\",\n            className: styles.input,\n            value: selectedTime,\n            onChange: e => setSelectedTime(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"--Select Time--\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 21\n            }, this), times.map(t => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: t,\n              children: t\n            }, t, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 37\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 17\n        }, this), selectedDate && selectedTime && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.confirmText,\n          children: [\"You selected: \", selectedDate, \", \", selectedTime]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true), bookingError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.errorText,\n        children: bookingError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.actionsRow,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.backButton,\n          onClick: () => setShowSlots(false),\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 9\n        }, this), !noSlots && selectedDate && selectedTime && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.bookButton,\n          onClick: handleBook,\n          disabled: bookingLoading,\n          children: bookingLoading ? 'Booking…' : 'Book & Pay'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(BookingFormLayout, \"rchOEPU5u6pwxavtKOMUn15XHJ4=\");\n_c3 = BookingFormLayout;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"BookingFormFields$lazy\");\n$RefreshReg$(_c2, \"BookingFormFields\");\n$RefreshReg$(_c3, \"BookingFormLayout\");","map":{"version":3,"names":["React","Suspense","lazy","useState","useEffect","Header","Footer","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","BookingFormFields","_c","_c2","BookingFormLayout","_s","params","URLSearchParams","window","location","search","today","Date","sevenDays","setDate","getDate","form","setForm","firstName","get","surname","phone","email","address","postcode","slots","setSlots","dates","setDates","times","setTimes","selectedDate","setSelectedDate","selectedTime","setSelectedTime","loading","setLoading","bookingLoading","setBookingLoading","error","setError","bookingError","setBookingError","errors","setErrors","showSlots","setShowSlots","noSlots","setNoSlots","formatDate","date","toISOString","split","handleChange","e","name","value","target","prev","_objectSpread","validateForm","newErrors","trim","test","digits","replace","length","fetchSlots","clientId","process","env","REACT_APP_CLIENT_ID","clientRef","concat","now","res","fetch","REACT_APP_API_BASE_URL","method","headers","body","JSON","stringify","visitType","earliestDate","latestDate","ok","Error","status","fetched","json","uniqDates","Array","from","Set","map","s","visitDate","message","available","filter","windowStart","windowEnd","handleGetDates","errs","Object","keys","handleBook","clientReference","visitWindowStart","visitWindowEnd","bookingTimeoutPeriod","payload","console","href","reference","children","title","fileName","_jsxFileName","lineNumber","columnNumber","className","loadingOverlay","loadingPopup","formCard","fallback","onChange","errorText","submitButton","onClick","disabled","resultsCard","noSlotsText","fieldGroup","htmlFor","label","id","input","d","t","confirmText","actionsRow","backButton","bookButton","_c3","$RefreshReg$"],"sources":["C:/Users/User/Downloads/shh_website_codebase/frontend/src/components/BookingFormLayout.js"],"sourcesContent":["// src/components/BookingFormLayout.js\r\nimport React, { Suspense, lazy, useState, useEffect } from 'react';\r\nimport Header from './Header';\r\nimport Footer from './Footer';\r\nimport styles from '../css/BookingFormLayout.module.css';\r\n\r\nconst BookingFormFields = lazy(() => import('./BookingFormFields'));\r\n\r\nexport default function BookingFormLayout() {\r\n  const params = new URLSearchParams(window.location.search);\r\n  const today = new Date();\r\n  const sevenDays = new Date(today);\r\n  sevenDays.setDate(today.getDate() + 7);\r\n\r\n  // form values\r\n  const [form, setForm]               = useState({\r\n    firstName: params.get('utm_firstName') || '',\r\n    surname:   params.get('utm_surname')   || '',\r\n    phone:     params.get('utm_phone')     || '',\r\n    email:     params.get('utm_email')     || '',\r\n    address:   params.get('utm_address')   || '',\r\n    postcode:  params.get('utm_postcode')  || ''\r\n  });\r\n\r\n  // slot-fetching state\r\n  const [slots, setSlots]             = useState([]);\r\n  const [dates, setDates]             = useState([]);\r\n  const [times, setTimes]             = useState([]);\r\n  const [selectedDate, setSelectedDate] = useState('');\r\n  const [selectedTime, setSelectedTime] = useState('');\r\n\r\n  // UI state\r\n  const [loading, setLoading]         = useState(false);\r\n  const [bookingLoading, setBookingLoading] = useState(false);\r\n  const [error, setError]             = useState(null);\r\n  const [bookingError, setBookingError] = useState(null);\r\n  const [errors, setErrors]           = useState({});\r\n  const [showSlots, setShowSlots]     = useState(false);\r\n  const [noSlots, setNoSlots]         = useState(false);\r\n\r\n  function formatDate(date) {\r\n    return date.toISOString().split('T')[0];\r\n  }\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setForm(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const { firstName, surname, phone, email, address, postcode } = form;\r\n    const newErrors = {};\r\n    if (!firstName.trim()) newErrors.firstName = 'First Name is required';\r\n    if (!surname.trim())   newErrors.surname   = 'Surname is required';\r\n    if (!address.trim())   newErrors.address   = 'Address is required';\r\n\r\n    if (!email.trim()) newErrors.email = 'Email is required';\r\n    else if (!/^\\S+@\\S+\\.\\S+$/.test(email))\r\n      newErrors.email = 'Enter a valid email address';\r\n\r\n    const digits = phone.replace(/\\D/g, '');\r\n    if (!digits) newErrors.phone = 'Phone is required';\r\n    else if (digits.length < 7)\r\n      newErrors.phone = 'Phone must be at least 7 digits';\r\n\r\n    if (!postcode.trim()) newErrors.postcode = 'Postcode is required';\r\n    else if (postcode.trim().length < 6)\r\n      newErrors.postcode = 'Postcode must be at least 6 characters';\r\n\r\n    return newErrors;\r\n  };\r\n\r\n  const fetchSlots = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    setNoSlots(false);\r\n\r\n    const clientId  = process.env.REACT_APP_CLIENT_ID;\r\n    const clientRef = `MHS-${Date.now()}`;\r\n    if (!clientId) {\r\n      setError('Error: REACT_APP_CLIENT_ID not set.');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const res = await fetch(\r\n        `${process.env.REACT_APP_API_BASE_URL || 'http://localhost:3001'}/api/available-slots`,\r\n        {\r\n          method:  'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body:    JSON.stringify({\r\n            clientId,\r\n            clientRef,\r\n            visitType:    'Service',\r\n            postcode:     form.postcode,\r\n            earliestDate: formatDate(today),\r\n            latestDate:   formatDate(sevenDays)\r\n          })\r\n        }\r\n      );\r\n      if (!res.ok) throw new Error(`HTTP ${res.status}`);\r\n      const { slots: fetched = [] } = await res.json();\r\n\r\n      setSlots(fetched);\r\n      const uniqDates = Array.from(new Set(fetched.map(s => s.visitDate)));\r\n      setDates(uniqDates);\r\n      setSelectedDate('');\r\n      setTimes([]);\r\n      setSelectedTime('');\r\n\r\n      if (uniqDates.length === 0) setNoSlots(true);\r\n      setShowSlots(true);\r\n    } catch (e) {\r\n      setError(e.message);\r\n      setShowSlots(false);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!selectedDate) return;\r\n    const available = slots\r\n      .filter(s => s.visitDate === selectedDate)\r\n      .map(s => `${s.windowStart}–${s.windowEnd}`);\r\n    setTimes(available);\r\n    setSelectedTime('');\r\n  }, [selectedDate, slots]);\r\n\r\n  const handleGetDates = () => {\r\n    const errs = validateForm();\r\n    if (Object.keys(errs).length) {\r\n      setErrors(errs);\r\n    } else {\r\n      setErrors({});\r\n      fetchSlots();\r\n    }\r\n  };\r\n\r\n  const handleBook = async () => {\r\n    setBookingLoading(true);\r\n    setBookingError(null);\r\n\r\n    const clientId  = process.env.REACT_APP_CLIENT_ID;\r\n    const clientRef = `MHS-${Date.now()}`;\r\n    const [windowStart, windowEnd] = selectedTime.split('–');\r\n\r\n    try {\r\n      const res = await fetch(\r\n        `${process.env.REACT_APP_API_BASE_URL || 'http://localhost:3001'}/api/book-slot`,\r\n        {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({\r\n            clientId,\r\n            clientReference: clientRef,\r\n            visitType: 'Service',\r\n            postcode: form.postcode,\r\n            visitDate: selectedDate,\r\n            visitWindowStart: windowStart,\r\n            visitWindowEnd: windowEnd,\r\n            bookingTimeoutPeriod: 500\r\n          })\r\n        }\r\n      );\r\n\r\n // parse the JSON **even on error** so we can inspect it\r\n     const payload = await res.json();\r\n     if (!res.ok) {\r\n       console.error('Booking error payload:', payload);\r\n       // show the server-sent message or the raw payload\r\n       throw new Error(payload.message || payload.error || JSON.stringify(payload));\r\n     }\r\n\r\n      // On success, redirect to payment\r\n      window.location.href = `/payment?reference=${payload.reference}`;\r\n    } catch (e) {\r\n      setBookingError(e.message);\r\n    } finally {\r\n      setBookingLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header title=\"SHH Booking\" />\r\n\r\n      {loading && (\r\n        <div className={styles.loadingOverlay}>\r\n          <div className={styles.loadingPopup}>\r\n            Loading available dates…\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Input form */}\r\n      {!showSlots && (\r\n        <div className={styles.formCard}>\r\n          <Suspense fallback={<p>Loading form…</p>}>\r\n            <BookingFormFields\r\n              form={form}\r\n              onChange={handleChange}\r\n              errors={errors}\r\n            />\r\n          </Suspense>\r\n          {error && <p className={styles.errorText}>{error}</p>}\r\n          <button\r\n            className={styles.submitButton}\r\n            onClick={handleGetDates}\r\n            disabled={loading}\r\n          >\r\n            {loading ? 'Loading…' : 'Get Available Dates'}\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Results / slot selection */}\r\n      {showSlots && (\r\n        <div className={styles.resultsCard}>\r\n          {noSlots ? (\r\n            <p className={styles.noSlotsText}>\r\n              No available slots found. Please check your postcode and try again, or contact us on XXXXXXXXX.\r\n            </p>\r\n          ) : (\r\n            <>\r\n              <h2>Select Date &amp; Time</h2>\r\n              <div className={styles.fieldGroup}>\r\n                <label htmlFor=\"date\" className={styles.label}>Date:</label>\r\n                <select\r\n                  id=\"date\"\r\n                  className={styles.input}\r\n                  value={selectedDate}\r\n                  onChange={e => setSelectedDate(e.target.value)}\r\n                >\r\n                  <option value=\"\">--Select Date--</option>\r\n                  {dates.map(d => <option key={d} value={d}>{d}</option>)}\r\n                </select>\r\n              </div>\r\n\r\n              {times.length > 0 && (\r\n                <div className={styles.fieldGroup}>\r\n                  <label htmlFor=\"time\" className={styles.label}>Time:</label>\r\n                  <select\r\n                    id=\"time\"\r\n                    className={styles.input}\r\n                    value={selectedTime}\r\n                    onChange={e => setSelectedTime(e.target.value)}\r\n                  >\r\n                    <option value=\"\">--Select Time--</option>\r\n                    {times.map(t => <option key={t} value={t}>{t}</option>)}\r\n                  </select>\r\n                </div>\r\n              )}\r\n\r\n              {selectedDate && selectedTime && (\r\n                <p className={styles.confirmText}>\r\n                  You selected: {selectedDate}, {selectedTime}\r\n                </p>\r\n              )}\r\n            </>\r\n          )}\r\n\r\n          {bookingError && (\r\n        <p className={styles.errorText}>{bookingError}</p>\r\n      )}\r\n      <div className={styles.actionsRow}>\r\n        <button className={styles.backButton} onClick={() => setShowSlots(false)}>\r\n          Back\r\n        </button>\r\n        {!noSlots && selectedDate && selectedTime && (\r\n          <button\r\n            className={styles.bookButton}\r\n            onClick={handleBook}\r\n            disabled={bookingLoading}\r\n          >\r\n            {bookingLoading ? 'Booking…' : 'Book & Pay'}\r\n          </button>\r\n        )}\r\n      </div>\r\n        </div>\r\n      )}\r\n\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
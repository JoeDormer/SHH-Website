{"ast":null,"code":"import _objectSpread from \"C:/Users/User/Downloads/shh_website_codebase/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Downloads\\\\shh_website_codebase\\\\frontend\\\\src\\\\components\\\\BookingFormLayout.js\",\n  _s = $RefreshSig$();\n// src/components/BookingFormLayout.js\nimport React, { Suspense, lazy, useState, useEffect } from 'react';\nimport Header from './Header';\nimport Footer from './Footer';\nimport styles from '../css/BookingFormLayout.module.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BookingFormFields = /*#__PURE__*/lazy(_c = () => import('./BookingFormFields'));\n_c2 = BookingFormFields;\nexport default function BookingFormLayout() {\n  _s();\n  const params = new URLSearchParams(window.location.search);\n  const today = new Date();\n  const sevenDays = new Date(today);\n  sevenDays.setDate(today.getDate() + 7);\n\n  // form values\n  const [form, setForm] = useState({\n    firstName: params.get('utm_firstName') || '',\n    surname: params.get('utm_surname') || '',\n    phone: params.get('utm_phone') || '',\n    email: params.get('utm_email') || '',\n    address: params.get('utm_address') || '',\n    postcode: params.get('utm_postcode') || ''\n  });\n\n  // slot-fetching state\n  const [slots, setSlots] = useState([]);\n  const [dates, setDates] = useState([]);\n  const [times, setTimes] = useState([]);\n  const [selectedDate, setSelectedDate] = useState('');\n  const [selectedTime, setSelectedTime] = useState('');\n\n  // UI state\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [errors, setErrors] = useState({});\n  const [showSlots, setShowSlots] = useState(false);\n  function formatDate(date) {\n    return date.toISOString().split('T')[0];\n  }\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setForm(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      [name]: value\n    }));\n  };\n\n  // simple front-end validations\n  const validateForm = () => {\n    const {\n      firstName,\n      surname,\n      phone,\n      email,\n      address,\n      postcode\n    } = form;\n    const newErrors = {};\n    if (!firstName.trim()) newErrors.firstName = 'First Name is required';\n    if (!surname.trim()) newErrors.surname = 'Surname is required';\n    if (!address.trim()) newErrors.address = 'Address is required';\n    if (!email.trim()) newErrors.email = 'Email is required';else if (!/^\\S+@\\S+\\.\\S+$/.test(email)) newErrors.email = 'Enter a valid email address';\n    const digits = phone.replace(/\\D/g, '');\n    if (!digits) newErrors.phone = 'Phone is required';else if (digits.length < 7) newErrors.phone = 'Phone must be at least 7 digits';\n    if (!postcode.trim()) newErrors.postcode = 'Postcode is required';else if (postcode.trim().length < 6) newErrors.postcode = 'Postcode must be at least 6 characters';\n    return newErrors;\n  };\n\n  // fetch slots, then flip into \"results\" view\n  const fetchSlots = async () => {\n    setLoading(true);\n    setError(null);\n    const clientId = process.env.REACT_APP_CLIENT_ID;\n    const clientRef = \"MHS-\".concat(Date.now());\n    if (!clientId) {\n      setError('Error: REACT_APP_CLIENT_ID not set.');\n      setLoading(false);\n      return;\n    }\n    const payload = {\n      clientId,\n      clientRef,\n      visitType: 'Service',\n      postcode: form.postcode,\n      earliestDate: formatDate(today),\n      latestDate: formatDate(sevenDays)\n    };\n    try {\n      const res = await fetch(\"\".concat(process.env.REACT_APP_API_BASE_URL || 'http://localhost:3001', \"/api/available-slots\"), {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      if (!res.ok) throw new Error(\"HTTP \".concat(res.status));\n      const {\n        slots: fetched = []\n      } = await res.json();\n      setSlots(fetched);\n      const uniqDates = Array.from(new Set(fetched.map(s => s.visitDate)));\n      setDates(uniqDates);\n      setSelectedDate('');\n      setTimes([]);\n      setSelectedTime('');\n      setShowSlots(true);\n    } catch (e) {\n      setError(e.message);\n      setSlots([]);\n      setDates([]);\n      setShowSlots(false);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // rebuild time-options when a date is picked\n  useEffect(() => {\n    if (!selectedDate) return;\n    const available = slots.filter(s => s.visitDate === selectedDate).map(s => \"\".concat(s.windowStart, \"\\u2013\").concat(s.windowEnd));\n    setTimes(available);\n    setSelectedTime('');\n  }, [selectedDate, slots]);\n\n  // click-handler for the Get-Dates button\n  const handleGetDates = () => {\n    const errs = validateForm();\n    if (Object.keys(errs).length) {\n      setErrors(errs);\n    } else {\n      setErrors({});\n      fetchSlots();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"SHH Booking\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.loadingOverlay,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.loadingPopup,\n        children: \"Loading available dates\\u2026\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }, this), !showSlots && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formCard,\n      children: [/*#__PURE__*/_jsxDEV(Suspense, {\n        fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading form\\u2026\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 31\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(BookingFormFields, {\n          form: form,\n          onChange: handleChange,\n          errors: errors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.errorText,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.submitButton,\n        onClick: handleGetDates,\n        disabled: loading,\n        children: loading ? 'Loadingâ€¦' : 'Get Available Dates'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }, this), showSlots && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.resultsCard,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Select Date & Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.fieldGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"date\",\n          className: styles.label,\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"date\",\n          className: styles.input,\n          value: selectedDate,\n          onChange: e => setSelectedDate(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"--Select Date--\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this), dates.map(d => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: d,\n            children: d\n          }, d, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this), times.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.fieldGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"time\",\n          className: styles.label,\n          children: \"Time:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"time\",\n          className: styles.input,\n          value: selectedTime,\n          onChange: e => setSelectedTime(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"--Select Time--\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 17\n          }, this), times.map(t => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: t,\n            children: t\n          }, t, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 13\n      }, this), selectedDate && selectedTime && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.confirmText,\n        children: [\"You selected: \", selectedDate, \", \", selectedTime]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.backButton,\n        onClick: () => setShowSlots(false),\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(BookingFormLayout, \"LH4iBJSVwDlqDzgyFkHf+YCOv3Y=\");\n_c3 = BookingFormLayout;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"BookingFormFields$lazy\");\n$RefreshReg$(_c2, \"BookingFormFields\");\n$RefreshReg$(_c3, \"BookingFormLayout\");","map":{"version":3,"names":["React","Suspense","lazy","useState","useEffect","Header","Footer","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","BookingFormFields","_c","_c2","BookingFormLayout","_s","params","URLSearchParams","window","location","search","today","Date","sevenDays","setDate","getDate","form","setForm","firstName","get","surname","phone","email","address","postcode","slots","setSlots","dates","setDates","times","setTimes","selectedDate","setSelectedDate","selectedTime","setSelectedTime","loading","setLoading","error","setError","errors","setErrors","showSlots","setShowSlots","formatDate","date","toISOString","split","handleChange","e","name","value","target","prev","_objectSpread","validateForm","newErrors","trim","test","digits","replace","length","fetchSlots","clientId","process","env","REACT_APP_CLIENT_ID","clientRef","concat","now","payload","visitType","earliestDate","latestDate","res","fetch","REACT_APP_API_BASE_URL","method","headers","body","JSON","stringify","ok","Error","status","fetched","json","uniqDates","Array","from","Set","map","s","visitDate","message","available","filter","windowStart","windowEnd","handleGetDates","errs","Object","keys","children","title","fileName","_jsxFileName","lineNumber","columnNumber","className","loadingOverlay","loadingPopup","formCard","fallback","onChange","errorText","submitButton","onClick","disabled","resultsCard","fieldGroup","htmlFor","label","id","input","d","t","confirmText","backButton","_c3","$RefreshReg$"],"sources":["C:/Users/User/Downloads/shh_website_codebase/frontend/src/components/BookingFormLayout.js"],"sourcesContent":["// src/components/BookingFormLayout.js\r\nimport React, { Suspense, lazy, useState, useEffect } from 'react';\r\nimport Header from './Header';\r\nimport Footer from './Footer';\r\nimport styles from '../css/BookingFormLayout.module.css';\r\n\r\nconst BookingFormFields = lazy(() => import('./BookingFormFields'));\r\n\r\nexport default function BookingFormLayout() {\r\n  const params = new URLSearchParams(window.location.search);\r\n  const today = new Date();\r\n  const sevenDays = new Date(today);\r\n  sevenDays.setDate(today.getDate() + 7);\r\n\r\n  // form values\r\n  const [form, setForm] = useState({\r\n    firstName: params.get('utm_firstName') || '',\r\n    surname:   params.get('utm_surname')   || '',\r\n    phone:     params.get('utm_phone')     || '',\r\n    email:     params.get('utm_email')     || '',\r\n    address:   params.get('utm_address')   || '',\r\n    postcode:  params.get('utm_postcode')  || ''\r\n  });\r\n\r\n  // slot-fetching state\r\n  const [slots, setSlots]             = useState([]);\r\n  const [dates, setDates]             = useState([]);\r\n  const [times, setTimes]             = useState([]);\r\n  const [selectedDate, setSelectedDate] = useState('');\r\n  const [selectedTime, setSelectedTime] = useState('');\r\n\r\n  // UI state\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError]     = useState(null);\r\n  const [errors, setErrors]   = useState({});\r\n  const [showSlots, setShowSlots] = useState(false);\r\n\r\n  function formatDate(date) {\r\n    return date.toISOString().split('T')[0];\r\n  }\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setForm(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  // simple front-end validations\r\n  const validateForm = () => {\r\n    const { firstName, surname, phone, email, address, postcode } = form;\r\n    const newErrors = {};\r\n    if (!firstName.trim()) newErrors.firstName = 'First Name is required';\r\n    if (!surname.trim())   newErrors.surname   = 'Surname is required';\r\n    if (!address.trim())   newErrors.address   = 'Address is required';\r\n\r\n    if (!email.trim()) newErrors.email = 'Email is required';\r\n    else if (!/^\\S+@\\S+\\.\\S+$/.test(email))\r\n      newErrors.email = 'Enter a valid email address';\r\n\r\n    const digits = phone.replace(/\\D/g, '');\r\n    if (!digits) newErrors.phone = 'Phone is required';\r\n    else if (digits.length < 7)\r\n      newErrors.phone = 'Phone must be at least 7 digits';\r\n\r\n    if (!postcode.trim()) newErrors.postcode = 'Postcode is required';\r\n    else if (postcode.trim().length < 6)\r\n      newErrors.postcode = 'Postcode must be at least 6 characters';\r\n\r\n    return newErrors;\r\n  };\r\n\r\n  // fetch slots, then flip into \"results\" view\r\n  const fetchSlots = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    const clientId  = process.env.REACT_APP_CLIENT_ID;\r\n    const clientRef = `MHS-${Date.now()}`;\r\n    if (!clientId) {\r\n      setError('Error: REACT_APP_CLIENT_ID not set.');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    const payload = {\r\n      clientId,\r\n      clientRef,\r\n      visitType:    'Service',\r\n      postcode:     form.postcode,\r\n      earliestDate: formatDate(today),\r\n      latestDate:   formatDate(sevenDays)\r\n    };\r\n\r\n    try {\r\n      const res = await fetch(\r\n        `${process.env.REACT_APP_API_BASE_URL || 'http://localhost:3001'}/api/available-slots`,\r\n        {\r\n          method:  'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body:    JSON.stringify(payload)\r\n        }\r\n      );\r\n      if (!res.ok) throw new Error(`HTTP ${res.status}`);\r\n      const { slots: fetched = [] } = await res.json();\r\n\r\n      setSlots(fetched);\r\n      const uniqDates = Array.from(new Set(fetched.map(s => s.visitDate)));\r\n      setDates(uniqDates);\r\n      setSelectedDate('');\r\n      setTimes([]);\r\n      setSelectedTime('');\r\n\r\n      setShowSlots(true);\r\n    } catch (e) {\r\n      setError(e.message);\r\n      setSlots([]);\r\n      setDates([]);\r\n      setShowSlots(false);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // rebuild time-options when a date is picked\r\n  useEffect(() => {\r\n    if (!selectedDate) return;\r\n    const available = slots\r\n      .filter(s => s.visitDate === selectedDate)\r\n      .map(s => `${s.windowStart}â€“${s.windowEnd}`);\r\n    setTimes(available);\r\n    setSelectedTime('');\r\n  }, [selectedDate, slots]);\r\n\r\n  // click-handler for the Get-Dates button\r\n  const handleGetDates = () => {\r\n    const errs = validateForm();\r\n    if (Object.keys(errs).length) {\r\n      setErrors(errs);\r\n    } else {\r\n      setErrors({});\r\n      fetchSlots();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header title=\"SHH Booking\" />\r\n\r\n      {/* Loading popup */}\r\n      {loading && (\r\n        <div className={styles.loadingOverlay}>\r\n          <div className={styles.loadingPopup}>\r\n            Loading available datesâ€¦\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* 1) Input form view */}\r\n      {!showSlots && (\r\n        <div className={styles.formCard}>\r\n          <Suspense fallback={<p>Loading formâ€¦</p>}>\r\n            <BookingFormFields\r\n              form={form}\r\n              onChange={handleChange}\r\n              errors={errors}\r\n            />\r\n          </Suspense>\r\n\r\n          {error && <p className={styles.errorText}>{error}</p>}\r\n\r\n          <button\r\n            className={styles.submitButton}\r\n            onClick={handleGetDates}\r\n            disabled={loading}\r\n          >\r\n            {loading ? 'Loadingâ€¦' : 'Get Available Dates'}\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {/* 2) Results/slot-selection view */}\r\n      {showSlots && (\r\n        <div className={styles.resultsCard}>\r\n          <h2>Select Date &amp; Time</h2>\r\n\r\n          <div className={styles.fieldGroup}>\r\n            <label htmlFor=\"date\" className={styles.label}>Date:</label>\r\n            <select\r\n              id=\"date\"\r\n              className={styles.input}\r\n              value={selectedDate}\r\n              onChange={e => setSelectedDate(e.target.value)}\r\n            >\r\n              <option value=\"\">--Select Date--</option>\r\n              {dates.map(d => (\r\n                <option key={d} value={d}>{d}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          {times.length > 0 && (\r\n            <div className={styles.fieldGroup}>\r\n              <label htmlFor=\"time\" className={styles.label}>Time:</label>\r\n              <select\r\n                id=\"time\"\r\n                className={styles.input}\r\n                value={selectedTime}\r\n                onChange={e => setSelectedTime(e.target.value)}\r\n              >\r\n                <option value=\"\">--Select Time--</option>\r\n                {times.map(t => (\r\n                  <option key={t} value={t}>{t}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          )}\r\n\r\n          {selectedDate && selectedTime && (\r\n            <p className={styles.confirmText}>\r\n              You selected: {selectedDate}, {selectedTime}\r\n            </p>\r\n          )}\r\n\r\n          <button\r\n            className={styles.backButton}\r\n            onClick={() => setShowSlots(false)}\r\n          >\r\n            Back\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}